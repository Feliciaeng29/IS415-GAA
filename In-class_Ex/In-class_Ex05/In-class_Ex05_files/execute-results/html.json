{
  "hash": "66fde2635217ecd9025140a3581bfd48",
  "result": {
    "markdown": "---\ntitle: \"In Class Exercise 5\"\ndate: 02-04-2024\noutput:\n    toc: true\n    toc_depth: 4\n---\n\n# Importing Packages\n\nThe R packages we'll be introducing today are:\n\n-   [**spdep**](https://cran.r-project.org/web/packages/spdep/index.html): used to create spatial weights matrix objects and related calculations (e.g. spatially lag attributes)\n\nIn addition, we'll be using the packages from our previous lessons:\n\n-   [**sf**](https://cran.r-project.org/web/packages/sf/index.html): used for importing, managing, and processing geospatial data\n-   [**tmap**](https://cran.r-project.org/web/packages/tmap/index.html): used for plotting thematic maps, such as choropleth and bubble maps\n-   [**tidyverse**](https://www.tidyverse.org/): used for importing, wrangling and visualising data (and other data science tasks!)\n\n** in this case we need sfdep to import the geospatial data **\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, tmap, tidyverse)\n```\n:::\n\n\n# Getting data into R environment\n\nThe datasets used for this exercise are:\n\n-   `Hunan_2012` (aspatial data): a .csv which stores Hunan's local development indicators in 2012\n-   `Hunan` (geospatial data): an ESRI shapefile which stores Hunan's country boundary layers\n\n## Importing shapefile into r environement\n\nLet's import our aspatial and geospatial data per usual:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#output: simple features object\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `Hunan' from data source \n  `C:\\Feliciaeng29\\IS415-GAA\\In-class_Ex\\In-class_Ex05\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n\n## Import csv file into r environment\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#output: R dataframe class\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n\n## Performing relational join\n\n-   Update the attribute table of hunan’s SpatialPolygonsDataFrame with the attribute fields of hunan2012 dataframe using left_join() of dplyr package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_GDPPC <- left_join(hunan,hunan2012) %>% select(1:4, 7, 15)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(hunan, \"data/rds/hunan.rds\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}