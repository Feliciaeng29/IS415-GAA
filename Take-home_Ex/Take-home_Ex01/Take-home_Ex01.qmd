---
title: "Take home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab hailing services in Singapore"
---

## **Objectives**

Geospatial analytics hold tremendous potential to address complex problems facing society. In this study, you are tasked to apply appropriate spatial point patterns analysis methods to discover the geographical and spatio-temporal distribution of Grab hailing services locations in Singapore.

## **The Task**

The specific tasks of this take-home exercise are as follows:

-   Using appropriate function of **sf** and **tidyverse**, preparing the following geospatial data layer in sf tibble data.frames:

    -   Grab taxi location points either by origins or destinations.

    -   Road layer within Singapore excluding outer islands.

    -   Singapore boundary layer excluding outer islands

-   Using the extracted data, derive traditional Kernel Density Estimation layers. (Hands-on ex3:1st order)

-   Using the extracted data, derive either Network Kernel Density Estimation (NKDE) or Temporal Network Kernel Density Estimation (TNKDE)

-   Using appropriate **tmap** functions, display the kernel density layers on openstreetmap of Singapore.

-   Describe the spatial patterns revealed by the kernel density maps.

# Loading R packages
```{r}
pacman::p_load(arrow, lubridate, tidyverse, sf, tmap)
```

# Importing Grab-Posisi Dataset
```{r}
grab <- read_parquet("data/apstial/GrabPosisi/part-00000.parquet")
```

## Preparing data for Grab
```{r}
glimpse(grab)
```

## Converting data type of pingtimestamp from character to date-time
```{r}
grab$pingtimestamp <- as_datetime(grab$pingtimestamp)
```

## Reformatted df into a new rds file called part0.rds. Save the output into a sub-folder call rds.

```{r}
write_rds(df, "data/rds/part0.rds")
```

# Importing data for Road data from OpenStreetMap

```{r}

```

# Importing Master Plan 2019 Subzone Boundary (No Sea) from Data.gov.sg.

```{r}
mpsz = st_read("data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml")
```

## Transforming the projection from wgs84 to svy21

```{r}
mpsz <- st_transform(mpsz,
                     crs = 3414)
```

# Task 1: Grab taxi location points either by origins or destinations.

## 1.1 Extracting trips' origin locations

```{r}
origin_df <- grab %>% 
  group_by(trj_id) %>% 
  arrange(pingtimestamp) %>% 
  filter(row_number()==1) %>%
  mutate(weekday = wday(pingtimestamp,
                        label=TRUE,
                        abbr=TRUE),
         start_hr = factor(hour(pingtimestamp)),
         day = factor(mday(pingtimestamp)))
```

## 1.2 Extracting trips' destination locations

```{r}
destination_df <- grab %>%
  group_by(trj_id) %>%
  arrange(desc(pingtimestamp)) %>%
  filter(row_number()==1) %>%
  mutate(weekday = wday(pingtimestamp,
                        label=TRUE,
                        abbr=TRUE),
         end_hr = factor(hour(pingtimestamp)),
         day = factor(mday(pingtimestamp)))
```

